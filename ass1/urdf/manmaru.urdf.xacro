<?xml version="1.0"?>
<robot name="manmaru" xmlns:xacro="http://ros.org/wiki/xacro">

  <xacro:macro name="wheel_inertial" params="mass">
    <inertial>
      <origin xyz="0.05 0 -0.03" rpy="0 0 0"/>
      <mass value="${mass}" />
      <inertia ixx="1.0" ixy="0.0" ixz="0.0" iyy="1.0" iyz="0.0" izz="1.0" />
    </inertial>
  </xacro:macro>

  <xacro:macro name="wheel" params="prefix x y">

    <link name="${prefix}_wheel">
      <visual>
        <origin xyz="0 0 0" rpy="0 0 0" />
        <geometry>
          <mesh filename="package://ass1/meshes/wheel.stl"/>
        </geometry>
      </visual>
      <collision>
        <origin xyz="0 0 0" rpy="0 0 0" />
        <geometry>
          <mesh filename="package://ass1/meshes/wheel.stl"/>
        </geometry>
      </collision>
      <xacro:wheel_inertial mass="1"/>
    </link>

    <joint name="${prefix}_wheel_joint" type="continuous">
      <axis xyz="0 1 0" rpy="0 0 0" />
      <parent link="trunk"/>
      <child link="${prefix}_wheel"/>
      <origin xyz="${x} ${y} 0" rpy="0 0 0"/>
    </joint>

    <!-- This block provides Gazebo with information on a few additional physical properties. -->
    <gazebo reference="${prefix}_wheel">
      <mu1 value="200.0"/>
      <mu2 value="100.0"/>
      <kp value="1000000.0" />
      <kd value="10.0" />
    </gazebo>

    <!-- This block connects the wheel joint to an actuator (motor), which informs both
    simulation and visualization of the robot -->
    <transmission name="${prefix}_wheel_trans">
      <type>transmission_interface/SimpleTransmission</type>
      <actuator name="${prefix}_wheel_motor">
        <mechanicalReduction>1</mechanicalReduction>
      </actuator>
      <joint name="${prefix}_wheel_joint">
        <hardwareInterface>hardware_interface/VelocityJointInterface</hardwareInterface>
      </joint>
    </transmission>

  </xacro:macro>

  <link name="dummy"></link>
  <link name="trunk">
    <visual>
      <origin xyz="0.05 0 0" rpy="${pi/2} 0 0" />
      <geometry>
        <mesh filename="package://ass1/meshes/trunk.stl"/>
      </geometry>
    </visual>
    <collision>
      <origin xyz="0.05 0 0" rpy="${pi/2} 0 0" />
      <geometry>
        <mesh filename="package://ass1/meshes/trunk.stl"/>
      </geometry>
    </collision>
    <inertial>
      <origin xyz="0.05 0 -0.02" rpy="${pi/2} 0 0"/>
      <mass value="5" />
      <inertia ixx="1.0" ixy="0.0" ixz="0.0" iyy="1.0" iyz="0.0" izz="1.0" />
    </inertial>
  </link>
  <joint name="dummy_joint" type="fixed">
    <parent link="dummy"/>
    <child link="trunk"/>
  </joint>

  <xacro:wheel prefix="left_front"  x="0.05"  y="0.06"/>
  <xacro:wheel prefix="left_back"   x="0.05"  y="-0.06"/>
  <xacro:wheel prefix="right_front" x="-0.05" y="0.06"/>
  <xacro:wheel prefix="right_back"  x="-0.05" y="-0.06"/>

  <!-- Gazebo plugin for ROS Control -->
  <gazebo>
    <plugin name="gazebo_ros_control" filename="libgazebo_ros_control.so">
      <robotNamespace>/</robotNamespace>
    </plugin>
  </gazebo>

</robot>